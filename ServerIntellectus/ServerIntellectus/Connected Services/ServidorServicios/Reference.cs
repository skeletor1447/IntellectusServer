//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServerIntellectus.ServidorServicios {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorServicios.IServidorServices")]
    public interface IServidorServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServidorServices/OnlineAOffline", ReplyAction="http://tempuri.org/IServidorServices/OnlineAOfflineResponse")]
        bool OnlineAOffline(long idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServidorServices/OnlineAOffline", ReplyAction="http://tempuri.org/IServidorServices/OnlineAOfflineResponse")]
        System.Threading.Tasks.Task<bool> OnlineAOfflineAsync(long idCliente);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServidorServicesChannel : ServerIntellectus.ServidorServicios.IServidorServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServidorServicesClient : System.ServiceModel.ClientBase<ServerIntellectus.ServidorServicios.IServidorServices>, ServerIntellectus.ServidorServicios.IServidorServices {
        
        public ServidorServicesClient() {
        }
        
        public ServidorServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServidorServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServidorServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServidorServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool OnlineAOffline(long idCliente) {
            return base.Channel.OnlineAOffline(idCliente);
        }
        
        public System.Threading.Tasks.Task<bool> OnlineAOfflineAsync(long idCliente) {
            return base.Channel.OnlineAOfflineAsync(idCliente);
        }
    }
}
